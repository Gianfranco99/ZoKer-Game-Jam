import { useCallback, useState } from 'react';
import Head from 'next/head';

import { Background, BetSelector, Button, Header } from '../../components';
import { useRouter } from 'next/router';
import { useSessionStorage } from '@/hooks/useSessionStorage';

type TBetOptions = '0.1' | '1' | '10' | '100';
const betOptions: TBetOptions[] = ['0.1', '1', '10', '100'];

export default function QuickMatch() {
  const { getItem, setItem } = useSessionStorage();

  const retrieveBet = () => {
    return parseInt(getItem('bet-value') as string) || 1;
  };

  const [selectedBet, setSelectedBet] = useState<number>(retrieveBet);

  const router = useRouter();
  const goToFormation = () => {
    setItem('bet-value', betOptions[selectedBet]);
    router.push('/formation');
  };

  const updateSelectedBetCallback = useCallback((betValue: number) => {
    setSelectedBet(betValue);
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Bet Choice screen */}

      {/* Background component */}
      <Background image="/backgrounds/stadium-screen.svg" blur />

      {/* Overlay */}
      <div className="bet-overlay">
        <Header title="choose a bet" backButton />
        <div className="selection">
          <BetSelector
            betOptions={betOptions}
            selectedBetOption={selectedBet}
            setSelectedBet={updateSelectedBetCallback}
          />
          <Button size="large">Free Play</Button>
        </div>
        <div className="footer">
          <Button size="large" onClick={goToFormation}>
            Next
          </Button>
        </div>
      </div>
    </>
  );
}
